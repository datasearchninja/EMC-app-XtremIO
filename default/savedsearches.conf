[XtremIOClustersLookup]
alert.track = 0
cron_schedule = 0 */6 * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 60
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=clusters \
| stats latest(content.index) AS Index latest(content.compression-mode) AS "Compression Mode" latest(content.sys-state) AS "System State" latest(content.num-of-tgs) AS "Target Group Count" latest(content.num-of-tars) AS "Target Count" latest(XtremIO_Server) AS "XtremIO Server" latest(content.num-of-ssds) AS "SSD Count" latest(content.num-of-upses) AS "BBU Count" latest(content.num-of-vols) AS "Volume Count" latest(content.num-of-xenvs) AS "xEnv Count" latest(content.num-of-nodes) AS "Controller Count" latest(content.num-of-bricks) AS " Count" latest(content.num-of-ib-switches) AS "Infiniband Switch Count" latest(content.dedup-ratio-text) AS "Dedup Ratio" latest(content.data-reduction-ratio-text) AS "Data Reduction Ratio" latest(content.thin-provisioning-ratio) AS "Thin Provisioning Ratio" latest(content.ud-ssd-space-in-use) AS "Physical Space In Use" latest(content.logical-space-in-use) AS "Logical Space In Use" latest(content.sys-start-timestamp) AS "System Start Time" latest(content.license-id) AS "License Id" latest(content.sys-sw-version) AS "XIOS Version" latest(content.sys-health-state) AS Health latest(content.bw) AS "Bandwidth" latest(content.avg-latency) AS "Latency" latest(content.iops) AS IOPS latest(content.vol-size) AS "Vol Size" latest(content.compression-factor-text) AS "Compression Ratio" by "Cluster Name" \
| eval "Overall Efficiency" = round(('Vol Size'/'Physical Space In Use'),2).":1" \
| `bytes_conversion('Logical Space In Use')` \
| rename output AS "Logical Space In Use" \
| `bytes_conversion('Physical Space In Use')` \
| rename output AS "Physical Space In Use" \
| `bytes_conversion('Vol Size')` \
| rename output AS "Total Capacity" \
| eval "Thin Provisioning Savings" = round((1-'Thin Provisioning Ratio')*100,2)."%" \
| eval "System Start Time" = strftime('System Start Time', "%m/%d/%Y %H:%M:%S") \
| fillnull value="N/A" \
| fields - "Vol Size","Thin Provisioning Ratio" \
| outputlookup XtremIOClustersLookup

[XtremIOVolumesLookup]
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 30
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=volumes \
| stats latest(content.compressible) AS Compressible latest(content.lb-size) AS "Logical Block Size" latest(content.small-io-alerts) AS "Small IO Alerts" latest(content.index) AS Index latest(content.creation-time) AS "Creation Timestamp" latest(content.logical-space-in-use) AS "Logical Space Used" latest(content.vol-size) AS "Vol Size" latest(content.num-of-dest-snaps) AS "Total Snapshots" latest(content.num-of-lun-mappings) AS "Total Lun Mappings" latest(content.vaai-tp-alerts) AS "VAAI TP Alerts" latest(content.bw) AS "Bandwidth" latest(content.avg-latency) AS Latency latest(content.iops) AS IOPS by "Cluster Name",content.name \
| `bytes_conversion('Logical Space Used')` \
| rename output AS "Logical Space Used" \
| `bytes_conversion('Vol Size')` \
| rename output AS "Volume Size" \
| rename content.name AS "Volume Name" \
| fillnull value="N/A" \
| fields - "Vol Size" \
| outputlookup XtremIOVolumesLookup

[XtremIOxBricksLookup]
alert.track = 0
cron_schedule = 0 */6 * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 60
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=bricks \
| eval "Brick Name" = mvindex('content.brick-id{}',1) \
| stats latest(content.index-in-system) AS Index latest(content.num-of-nodes) AS "Storage Controller Count" latest(content.num-of-ssds) AS "SSD Count" latest(content.brick-guid) AS GUID latest(content.brick-state) AS State by "Cluster Name", "Brick Name" \
| outputlookup XtremIOxBricksLookup

[XtremIOInitiatorsLookup]
alert.track = 0
cron_schedule = 0 */4 * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 60
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=initiators \
| eval 'Group Name' = mvindex('content.ig-id{}',1) \
| stats latest(content.index) AS Index latest(content.bw) AS "Bandwidth" latest(content.avg-latency) AS "Latency" latest(content.iops) AS "IOPS" latest('Group Name') AS "Group Name" latest(content.port-address) AS "Port Address" latest(content.port-type) AS "Port Type" latest(content.initiator-conn-state) AS "Connection State" latest(content.num-of-conn-tars) AS "Connected Targets" by "Cluster Name",content.name \
| rename content.name AS "Initiator Name" \
| outputlookup XtremIOInitiatorsLookup

[XtremIOTargetsLookup]
alert.track = 0
cron_schedule = 0 */4 * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 60
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=targets \
| eval 'BricK Name' = mvindex('content.brick-id{}',1) \
| eval 'Storage Controller' = mvindex('content.node-id{}',1) \
| stats latest(content.index) AS Index latest(content.jumbo-enabled) AS "Jumbo Frame Enabled" latest(content.driver-version) AS "Driver Version" latest('BricK Name') AS "Brick Name" latest('Storage Controller') AS "Storage Controller" latest(content.bw) AS "Bandwidth" latest(content.avg-latency) AS "Latency" latest(content.iops) AS "IOPS" latest(content.port-address) AS "Port Address" latest(content.port-type) AS "Port Type" latest(content.port-state) AS "Port State" by "Cluster Name",content.name \
| rename content.name AS "Target Name" \
| outputlookup XtremIOTargetsLookup

[XtremIOSnapshotsLookup]
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 30
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component=snapshots \
| eval 'Ancestor Name' = mvindex('content.ancestor-vol-id{}',1) \
| stats latest(content.index) AS Index latest(content.creation-time) AS "Creation Timestamp" latest('Ancestor Name') AS "Ancestor Name" latest(content.logical-space-in-use) AS "Logical Space Used" latest(content.vol-size) AS "Vol Size" latest(content.num-of-dest-snaps) AS "Total Snapshots" latest(content.num-of-lun-mappings) AS "Total Lun Mappings" latest(content.vaai-tp-alerts) AS "VAAI TP Alerts" by "Cluster Name",content.name \
| `bytes_conversion('Logical Space Used')` \
| rename output AS "Logical Space Used" \
| `bytes_conversion('Vol Size')` \
| rename output AS "Volume Size" \
| rename content.name AS "Snapshot Name" \
| fields - "Vol Size" \
| outputlookup XtremIOSnapshotsLookup

[XtremIOStorageControllersLookup]
alert.track = 0
cron_schedule = 0 */4 * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = 1
schedule_window = 60
search = `xtremio_index_filter` sourcetype=emc:xtremio:rest component="storage-controllers" \
| dedup content.node-guid \
| mvexpand content.monitored-ups-list{}{} \
| where 'content.monitored-ups-list{}{}' LIKE "%-BBU" \
| eval "Brick Name" = mvindex('content.brick-id{}',1) \
| stats latest(content.index) AS Index latest(content.num-of-local-disks) AS "Local Disk Count" latest(content.num-of-node-psus) AS "PSU Count" latest(content.num-of-ssds) AS "SSD Count" latest(content.node-health-state) AS Health latest(content.bios-fw-version) AS "Firmware Version" latest(content.os-version) AS "OS Version" latest(content.ib-addr1) AS "IB1 Address" latest(content.ib-addr2) AS "IB2 Address" latest(content.ib1-port-state) AS "IB1 Port State" latest(content.ib2-port-state) AS "IB2 Port State" latest(content.ib1-port-peer-type) AS "IB1 Port Type" latest(content.ib2-port-peer-type) AS "IB2 Port Type" latest(content.ib1-link-health-level) AS "IB1 link health" latest(content.ib2-link-health-level) AS "IB2 link health" by "Cluster Name","Brick Name",content.name \
| rename content.name AS "Controller Name" \
| outputlookup XtremIOStorageControllersLookup
